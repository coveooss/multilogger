// Code generated by "stringer -type=tokenType -trimprefix token -output formatter_generated.go"; DO NOT EDIT.

package multilogger

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[unsetTokenType-0]
	_ = x[tokenMessage-1]
	_ = x[tokenLevel-2]
	_ = x[tokenTime-3]
	_ = x[tokenDelta-4]
	_ = x[tokenDelay-5]
	_ = x[tokenGlobalDelay-6]
	_ = x[tokenModule-7]
	_ = x[tokenFunc-8]
	_ = x[tokenFile-9]
	_ = x[tokenLine-10]
	_ = x[tokenCaller-11]
	_ = x[tokenFields-12]
	_ = x[fieldTokenType-13]
	_ = x[fieldWrapperTokenType-14]
	_ = x[keyWrapperTokenType-15]
}

const _tokenType_name = "unsetTokenTypeMessageLevelTimeDeltaDelayGlobalDelayModuleFuncFileLineCallerFieldsfieldTokenTypefieldWrapperTokenTypekeyWrapperTokenType"

var _tokenType_index = [...]uint8{0, 14, 21, 26, 30, 35, 40, 51, 57, 61, 65, 69, 75, 81, 95, 116, 135}

func (i tokenType) String() string {
	if i >= tokenType(len(_tokenType_index)-1) {
		return "tokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenType_name[_tokenType_index[i]:_tokenType_index[i+1]]
}
